
def solution(input_land):

    def evaluate_adjacent_cells(row, col):
        tree_count = 0
        lumberyard_count = 0
        result = []
        if row - 1 >= 0:
            result.append(input_land[row - 1][col])
            if col - 1 >= 0:
                result.append(input_land[row - 1][col - 1])
            if col + 1 < len(input_land[row]):
                result.append(input_land[row - 1][col + 1])
        if col - 1 >= 0:
            result.append(input_land[row][col - 1])
            if row + 1 < len(input_land):
                result.append(input_land[row + 1][col - 1])
        if row + 1 < len(input_land):
            result.append(input_land[row + 1][col])
            if col + 1 < len(input_land[row]):
                result.append(input_land[row + 1][col + 1])
        if col + 1 < len(input_land[row]):
            result.append(input_land[row][col + 1])
        
        tree_count = sum(1 for x in result if x == "|")
        lumberyard_count = sum(1 for x in result if x == "#")

        return tree_count, lumberyard_count

    result = 0
    prev_result = 0
    for tick in range(1010):
        new_land = [["." for col in range(len(input_land))] for _ in range(len(input_land))]
        for row in range(len(input_land)):
            for col in range(len(input_land[row])):
                if input_land[row][col] == ".": # open
                    trees_count, _ = evaluate_adjacent_cells(row, col)
                    if trees_count >= 3:
                        new_land[row][col] = "|"
                elif input_land[row][col] == "|": # trees
                    _, lumberyard_count = evaluate_adjacent_cells(row, col)
                    if lumberyard_count >= 3:
                        new_land[row][col] = "#"
                    else:
                        new_land[row][col] = "|"
                elif input_land[row][col] == "#": # lumberyard
                    trees_count, lumberyard_count = evaluate_adjacent_cells(row, col)
                    if lumberyard_count >= 1 and trees_count >= 1:
                        new_land[row][col] = "#"
                    else:
                        new_land[row][col] = "."
        input_land = new_land
    # print('\n'.join([''.join([col for col in row]) for row in input_land]))
        wood_count = 0
        lumberyard_count = 0

        for row in range(len(input_land)):
            for col in range(len(input_land[row])):
                if input_land[row][col] == "|":
                    wood_count += 1
                elif input_land[row][col] == "#":
                    lumberyard_count += 1            
        result = wood_count * lumberyard_count
        diff = result - prev_result
        prev_result = result
        if tick > 998:
            print("Tick: {}, Result: {}, diff: {}".format(tick, result, diff))


if __name__ == '__main__':
    input_land = [
    ".#|||.|...|....#|..##|....||.|..#..##.|..#........", 
    "...|##..#.||||..||.#.|..#.|.|.....#|.|.|.....|...|", 
    "#.....#.##|#..||##..|.......||.|..##|...|..|#...#|", 
    "#|.|.#.|.#..||..#...#...##|...|.....|##......#....", 
    "..###.......||..#....|..|..#.|##..##.##..|.......#", 
    ".#.|#|.|.|.......|.......|#....#...#.|..###.#...||", 
    "##|..|...#.|.##|....#.##.....|....|....|||#.|#.#..", 
    ".#.|.....#|..|..|....|##.#.||.##...|.|....#|...|.#", 
    "#|....#....|..|....|..|..#|..#|....#..#.....#.|..|", 
    "|....|#|.#.|.....|.|#|..#..#..#.|##....#.|......##", 
    "|...#......|..#....##..#.#..#.|..#....||.#.#.#.|.|", 
    "..|..|#||#|#|#|...|........#.|..|#.#.##..|..||.|.#", 
    ".||#.#...#.......|#...|#.|..#|..|..#........||#..|", 
    ".||.#||#......#.#......|..........|.|..#.|.|.....|", 
    "|.#.#|||##|...|..#.#.#|.||......#|#|#.........|.|.", 
    "......#.....|...|...#.#..#..#.##.#..##|...|.#|....", 
    "#|#.|.#|.#|.||.#.||.......|||.||.#...|.##|.|.#...#", 
    "|||.#..|....##..#|||.|.|#|.#.|.#.#.||##...|##.#...", 
    "...|.|..|....|..#.||#|...#|.|#|.#|..####.#.##.|.#.", 
    "|.#|||.##.#.|###|.......#....|..#..||#|...#...#.#.", 
    "#.#.....##|#.#..|.#|.|...|#|....|#..#..|..|.....|#", 
    "..|..||#...|#.|..#...#.|.|.|#|.|..###|#.||#..#|.|.", 
    "#..###.|.#||.###|...#.|..|.|.....#||..#.|#.....|#.", 
    "#..#..||..#....|||.#..|...|...........#..####||##.", 
    "..#|#.|..|.#|.||.#.#||.|......||#.#..|...###||#..#", 
    "||.#....#........|#||.#..|.|....|#.##.....||##|..|", 
    "|.#|##..#|...||.........|..#....#.|#..|#|..|#.|...", 
    "|....#|.||.#|.#||#|..#..|..#..|....|.....|.#....#.", 
    "...##|.....................|...#.#..|.#|..#.##.|..", 
    "#...|...|..|...#|...|...#.........#|#|||#||..|.|#.", 
    "#|......||.|#....###|..##|.#..#.#.#.##||....|.....", 
    "...|.#..||...#.#.....#|...#...#|#.|.|##|#......|#.", 
    "....|||..#||#|||...|..##.|##.|.|.|.#.#.....###.#|.", 
    "#.|..#..##..#||..###|#.#.#...#..|.|#.|..#.....#.|.", 
    "|..|.|.#|#|...###..|...#|..#...|.||#.#|#....|.||.|", 
    "..###|#.#.#.##...#.|#.....#..|...|##.||..##...#|#|", 
    "|..|#|#..#.....|#...|...||......#...#..#|......#|.", 
    "####....|#...|.#..|....|.#....|#.|.##|..||...#....", 
    "#.#..#.#.|.|....#..#|.|...|.|.||....|#..#..|..||..", 
    "#..#.|.#..|#.|.....#..#|..#.|..|.|..|.#......###|.", 
    "..|#|...||.|.#..|..#...###....||||....||..##.##.|#", 
    "|...#...|#........#....#..#.#......||.#.........|.", 
    "..........|#...|#####.|.||||#....#...#....|.|#|..#", 
    "....|..|#.|.#.............|.#||.||..|.|...||#....|", 
    "..||........#........#|#...|..#.#..|.#..#.|#...#.|", 
    "...#..|##.##|#.|#.|.#.#...#.#..#...|......#|.....#", 
    ".|.|..|.|....#|....##.#.|....#|........#|.||.##..|", 
    ".....||...|.|...|..|#.|###.#.#.#|..#|..........#.|", 
    ".#..|#|#..#.#..#.#........#..#...#..#.#..##..#|.|#", 
    "....|.|.#.#|..|.#.|.|#.|#..#|..|..#.....|#|.#....#"]
    solution(input_land)